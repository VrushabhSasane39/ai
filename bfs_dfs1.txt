print("enter 'done' when nodes are overv!!!")

graph={}

while True:
    node = input("enter the node:")
    if node=="done":
        break
    neighbour=input("enter the neighbours(coma separated):").split(',')
    graph[node]=neighbour
    
    
bfsqueue = []

start='0'

bfsvisited = []

def bfs(visited , graph , start):
    visited.append(start)
    bfsqueue.append(start)
    final = []
    
    while bfsqueue:
        m = bfsqueue.pop(0)
        final.append(m)
        
        for neighbour in graph[m]:
            if neighbour not in visited:
                visited.append(neighbour)
                bfsqueue.append(neighbour)
    return final
        
def dfs(graph , start , visited = None):
    if visited is None:
        visited=set()
    visited.add(start)
    print(start)
    for neighbour in graph[start]:
        if neighbour  not in visited:
            dfs(graph,neighbour,visited)
            
print(f"BFS of the graph is:{bfs(bfsvisited,graph,start)}")
print("DFS of the graph is:")
dfs(graph,start)
